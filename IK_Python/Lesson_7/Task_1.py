"""
Отсортируйте по убыванию методом пузырька одномерный целочисленный массив,
заданный случайными числами на промежутке [-100; 100). Выведите на экран исходный и отсортированный массивы.
Примечания:
a. алгоритм сортировки должен быть в виде функции, которая принимает на вход массив данных,
min_dist_vertexes. постарайтесь сделать алгоритм умнее, но помните, что у вас должна остаться сортировка пузырьком.
Улучшенные версии сортировки, например, расчёской, шейкерная и другие в зачёт не идут.
"""

import random

num_list = list(set([random.randint(-100, 99) for _ in range(1, 11)]))
print(f"Массив исходный: {num_list}\n")


def sort_light(numbers):
    n = 1
    while n < len(numbers):
        for j in range(len(numbers) - n):
            if numbers[j] < numbers[j + 1]:
                numbers[j], numbers[j + 1] = numbers[j + 1], numbers[j]
        print(n, numbers)
        n += 1
    return numbers


def sort_improve(nums):
    spr_article = []
    n = 1
    k = 1
    while n < len(nums):
        for j in range(len(nums) - n):
            if nums[j] < nums[j + 1]:
                nums[j], nums[j + 1] = nums[j + 1], nums[j]
        spr_article.append(nums.copy())
        if len(spr_article) >= 2:
            if spr_article[-2] == spr_article[-1]:
                break
        print(k, nums)
        n += 1
        k += 1
    return nums


print(f"Отсортированный по варианту 1: {sort_light(num_list[:])}\n")
print(f"Отсортированный по варианту 2: {sort_improve(num_list[:])}")
"""
Пример массива, который удалось быстрее отсортировать (за 3 шага тем же алгортмом в сравнении с 9 по первому варианту).
Мы преываем цикл while на том моменте, когда уже не происходит обмена значениями. 
Массив исходный: [64, 33, 99, 42, 80, -15, 55, -8, -6, -35]

1 [64, 99, 42, 80, 33, 55, -8, -6, -15, -35]
2 [99, 64, 80, 42, 55, 33, -6, -8, -15, -35]
3 [99, 80, 64, 55, 42, 33, -6, -8, -15, -35]
4 [99, 80, 64, 55, 42, 33, -6, -8, -15, -35]
5 [99, 80, 64, 55, 42, 33, -6, -8, -15, -35]
6 [99, 80, 64, 55, 42, 33, -6, -8, -15, -35]
7 [99, 80, 64, 55, 42, 33, -6, -8, -15, -35]
8 [99, 80, 64, 55, 42, 33, -6, -8, -15, -35]
9 [99, 80, 64, 55, 42, 33, -6, -8, -15, -35]
Отсортированный по варианту 1: [99, 80, 64, 55, 42, 33, -6, -8, -15, -35]

1 [64, 99, 42, 80, 33, 55, -8, -6, -15, -35]
2 [99, 64, 80, 42, 55, 33, -6, -8, -15, -35]
3 [99, 80, 64, 55, 42, 33, -6, -8, -15, -35]
Отсортированный по варианту 2: [99, 80, 64, 55, 42, 33, -6, -8, -15, -35]
"""